{"version":3,"sources":["component/all-doc-viewer.jsx","App.js","reportWebVitals.js","index.js"],"names":["AllDocViewer","props","state","requestedUrl","url","requestedHeight","requestedWidth","this","setState","height","width","e","window","innerHeight","React","createElement","src","background","Component","App","update","bind","h","w","reqUrl","hit","wid","key","target","value","preventDefault","document","getElementById","click","Fragment","className","class","type","defaultValue","onBlur","onKeyUp","onClick","updateFrame","id","style","display","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d6f1c5d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class AllDocViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            requestedUrl: props.url || \"\",\r\n            requestedHeight: \"\",\r\n            requestedWidth: \"\"\r\n        };\r\n    } // end constructor\r\n\r\n    componentWillMount(){\r\n        if(this.props){\r\n            this.setState({\r\n                requestedUrl:(this.props && this.props.url)?this.props.url:\"\",\r\n                requestedHeight: (this.props && this.props.height)?this.props.height:\"100%\",\r\n                requestedWidth: (this.props && this.props.width)?this.props.width:\"100%\" \r\n            })\r\n        };\r\n    }\r\n    componentWillReceiveProps(e){\r\n        if(this.props){\r\n            this.setState({\r\n                requestedUrl:(this.props && this.props.url)?this.props.url:\"\",\r\n                requestedHeight: (this.props && this.props.height)?this.props.height:window.innerHeight,\r\n                requestedWidth: (this.props && this.props.width)?this.props.width:\"100%\" \r\n            })\r\n        };\r\n    }\r\n    render() {\r\n        const { requestedUrl,requestedHeight,requestedWidth } = this.state;\r\n        return (\r\n            React.createElement(\"iframe\", {\r\n                src: \"https://docs.google.com/viewer?url=\" + requestedUrl + \"&embedded=true\",\r\n                width: requestedWidth,\r\n                height: requestedHeight,\r\n                background: \"#eee\"\r\n            })\r\n        );\r\n    }\r\n}","import React from 'react';\nimport \"./App.css\"\nimport AllDocViewer from './component/all-doc-viewer'\n// import AllDocViewer from 'all-doc-viewer-fixed';\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.update = this.update.bind(this)\n        // this.updateFrame = this.updateFrame.bind(this)\n        this.state = {\n            url: \"http://www.africau.edu/images/default/sample.pdf\",\n            h: \"99%\",\n            w: \"99%\",\n            reqUrl: \"http://www.africau.edu/images/default/sample.pdf\",\n            hit: \"\",\n            wid: \"\"\n        };\n    } // end constructor\n\n    componentDidMount() {\n    }\n\n    update(key, e) {\n        this.setState({ [key]: e.target.value })\n    }\n    updateFrame(e) {\n        e.preventDefault();\n\n        this.setState({\n            url: this.state.url,\n            h: this.state.h,\n            w: this.state.w\n        })\n        document.getElementById('update').click()\n    }\n\n    render() {\n        const { url, h, w, reqUrl, hit, wid } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"block-left\">\n                    <div class=\"full-screen-container\">\n                        <div class=\"login-container\">\n                            <h3 class=\"login-title\">Welcome</h3>\n                            <form>\n                                <div class=\"input-group\">\n                                    <label>URL</label>\n                                    <input type=\"text\" defaultValue={reqUrl} onBlur={(e) => this.update('url', e)} />\n                                </div>\n                                <div class=\"input-group\">\n                                    <label>Height (in px)</label>\n                                    <input type=\"text\" defaultValue={hit} onKeyUp={(e) => this.update('h', e)} />\n                                </div>\n                                <div class=\"input-group\">\n                                    <label>Width (in px)</label>\n                                    <input type=\"text\" defaultValue={wid} onKeyUp={(e) => this.update('w', e)} />\n                                </div>\n                                <button type=\"button\" onClick={this.updateFrame.bind(this)} class=\"login-button\">Load</button>\n                                <button type=\"button\" id=\"update\" style={{display:\"none\"}} onClick={this.updateFrame.bind(this)} class=\"login-button\">Load</button>\n\n                            </form>\n                            <div className=\"footer-badge\">\n                                <a href=\"https://www.npmjs.com/package/all-doc-viewer-fixed\" target=\"_blank\">&#10939; GO TO NPM</a>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"block-right\">\n                    <AllDocViewer url={url} height={h} width={w} />\n                </div>\n\n\n            </React.Fragment>\n        );\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}