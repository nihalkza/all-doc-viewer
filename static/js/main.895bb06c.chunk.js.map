{"version":3,"sources":["component/all-doc-viewer.jsx","App.js","reportWebVitals.js","index.js"],"names":["AllDocViewer","props","useState","url","setUrl","h","height","setHeight","w","width","setWidth","useEffect","React","createElement","src","background","App","isUpdate","setUpdate","rurl","setRUrl","rheight","setRHeight","rwidth","setRWidth","Fragment","className","class","type","defaultValue","onChange","e","target","value","onClick","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAEe,SAASA,EAAaC,GACjC,MAAsBC,WAAQ,WAAR,cAAYD,EAAME,MAAxC,mBAAOA,EAAP,KAAYC,EAAZ,KACA,EAA4BF,WAAQ,WAAR,cAAYD,EAAMI,IAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BL,WAAQ,WAAR,cAAYD,EAAMO,IAA5C,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBACI,WACIJ,EAAUN,EAAMI,GAChBK,EAAST,EAAMO,GACfJ,EAAOH,EAAME,OAEpB,CAACF,IAKEW,IAAMC,cAAc,SAAU,CAC1BC,IAAK,sCAAwCX,EAAM,iBACnDM,MAAM,GAAD,OAAKA,EAAL,MACLH,OAAO,GAAD,OAAKA,EAAL,MAENS,WAAY,S,WCjBT,SAASC,IAEhB,MAAqBd,mBAAS,oDAA9B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAA2BF,mBAAS,OAApC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAyBL,mBAAS,OAAlC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA6BR,oBAAS,GAAtC,mBAAOe,EAAP,KAAgBC,EAAhB,KAEA,EAAuBhB,mBAASC,GAAhC,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAA6BlB,mBAASO,GAAtC,mBAAOY,EAAP,KAAeC,EAAf,KACA,EAA2BpB,mBAASI,GAApC,mBAAOiB,EAAP,KAAcC,EAAd,KAWA,OACI,eAAC,IAAMC,SAAP,WACI,qBAAKC,UAAU,aAAf,SACI,qBAAKC,MAAM,wBAAX,SACI,sBAAKA,MAAM,kBAAX,UACI,oBAAIA,MAAM,cAAV,qBACA,iCACI,sBAAKA,MAAM,cAAX,UACI,wCACA,uBAAOC,KAAK,OAAOC,aAAc1B,EAAK2B,SAAU,SAACC,GAAD,OAAOX,EAAQW,EAAEC,OAAOC,aAE5E,sBAAKN,MAAM,cAAX,UACI,mDACA,uBAAOC,KAAK,OAAOC,aAAcvB,EAAQwB,SAAU,SAACC,GAAD,OAAOT,EAAWS,EAAEC,OAAOC,aAElF,sBAAKN,MAAM,cAAX,UACI,kDACA,uBAAOC,KAAK,OAAOC,aAAcpB,EAAOqB,SAAU,SAACC,GAAD,OAAOP,EAAUO,EAAEC,OAAOC,aAEhF,wBAAQL,KAAK,SAASM,QAAS,kBA1BnD9B,EAAOe,GACPZ,EAAUc,GACVX,EAASa,QACTL,GAAWD,IAuBuDU,MAAM,eAApD,qBAEJ,qBAAKD,UAAU,eAAf,SACI,mBAAGS,KAAK,qDAAqDH,OAAO,SAApE,uCAMhB,qBAAKN,UAAU,cAAf,SACI,cAAC1B,EAAD,CAAcG,IAAKA,EAAKE,EAAGC,EAAQE,EAAGC,SC1D1D,IAYe2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.895bb06c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport default function AllDocViewer(props) {\r\n    const [url, setUrl] = useState(...props.url);\r\n    const [height, setHeight] = useState(...props.h);\r\n    const [width, setWidth] = useState(...props.w);\r\n\r\n\r\n\r\n\r\n    useEffect(\r\n        ()=>{\r\n            setHeight(props.h);\r\n            setWidth(props.w);\r\n            setUrl(props.url);\r\n        }\r\n    ,[props])\r\n\r\n\r\n\r\n    return (\r\n        React.createElement(\"iframe\", {\r\n            src: \"https://docs.google.com/viewer?url=\" + url + \"&embedded=true\",\r\n            width: `${width}px`,\r\n            height: `${height}px`,\r\n            // key: Math.floor(Math.random() * 100),\r\n            background: \"#eee\"\r\n        })\r\n    )\r\n}","import React,{useState} from 'react';\nimport \"./App.css\"\nimport AllDocViewer from './component/all-doc-viewer'\n// import AllDocViewer from 'all-doc-viewer-fixed';\n\n\n\n\n\nexport default function App() {\n\n        const [url,setUrl] = useState(\"http://www.africau.edu/images/default/sample.pdf\");\n        const [height,setHeight] = useState('100');\n        const [width,setWidth] = useState('100');\n        const [isUpdate,setUpdate] = useState(true);\n        \n        const [rurl,setRUrl] = useState(url);\n        const [rheight,setRHeight] = useState(width);\n        const [rwidth,setRWidth] = useState(height);\n        \n\n        const update = ()=>{\n            setUrl(rurl);\n            setHeight(rheight);\n            setWidth(rwidth);\n            setUpdate(!isUpdate)\n        }\n\n \n        return (\n            <React.Fragment>\n                <div className=\"block-left\">\n                    <div class=\"full-screen-container\">\n                        <div class=\"login-container\">\n                            <h3 class=\"login-title\">Welcome</h3>\n                            <form>\n                                <div class=\"input-group\">\n                                    <label>URL</label>\n                                    <input type=\"text\" defaultValue={url} onChange={(e) => setRUrl(e.target.value)} />\n                                </div>\n                                <div class=\"input-group\">\n                                    <label>Height (in px)</label>\n                                    <input type=\"text\" defaultValue={height} onChange={(e) => setRHeight(e.target.value)} />\n                                </div>\n                                <div class=\"input-group\">\n                                    <label>Width (in px)</label>\n                                    <input type=\"text\" defaultValue={width} onChange={(e) => setRWidth(e.target.value)} />\n                                </div>\n                                <button type=\"button\" onClick={()=>update()}  class=\"login-button\">Load</button>\n                            </form>\n                            <div className=\"footer-badge\">\n                                <a href=\"https://www.npmjs.com/package/all-doc-viewer-fixed\" target=\"_blank\">&#10939; GO TO NPM</a>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"block-right\">\n                    <AllDocViewer url={url} h={height} w={width} />\n                </div>\n\n\n            </React.Fragment>\n        );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}